{"version":3,"sources":["firebase.js","components/NavBar.js","components/SignUp.js","components/LogIn.js","pages/Profile.js","pages/Feed.js","pages/Explore.js","pages/Messages.js","pages/Notifications.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","NavBar","Box","mb","AppBar","color","position","Toolbar","ListItem","to","src","alt","FilledInput","placeholder","SignUp","props","handleSubmit","e","preventDefault","addUser","state","target","reset","handleChange","setState","name","value","email","fullName","username","password","following","quotes","Container","component","maxWidth","pb","margin","Typography","align","variant","onSubmit","this","required","type","fullWidth","onChange","Button","onClick","loggingIn","Component","LogIn","accountValidation","Profile","justify","style","backgroundColor","borderRadius","pt","currentUser","map","item","p","m","border","borderColor","Feed","filterList","users","filter","user","includes","Display","length","quote","Explore","id","newFollow","parentElement","followUser","key","handleClick","Messages","Notifications","LogInControl","isLoggedIn","path","exact","render","isloggingIn","App","collection","add","then","listener","doc","update","FieldValue","arrayUnion","prevState","creds","find","alert","get","querySnapshot","data","docs","forEach","push","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3513afb.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCmwsWoxWc2MHYyWRvIdTHWR7tYBT_1F5A\",\n    authDomain: \"fakegram-edd19.firebaseapp.com\",\n    databaseURL: \"https://fakegram-edd19.firebaseio.com\",\n    projectId: \"fakegram-edd19\",\n    storageBucket: \"fakegram-edd19.appspot.com\",\n    messagingSenderId: \"703505228908\",\n    appId: \"1:703505228908:web:3d655b2203fbe9d84ce449\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport { db };","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport HomeIcon from '@material-ui/icons/Home';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { Link } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\n\n\nfunction NavBar() {\n    return (\n      <Box mb={15}>\n        <AppBar color=\"primary\" position=\"static\">\n          <Toolbar>\n            <ListItem>\n              <Link to='/'><img src=\"./logo.png\" alt=\"logo\"/></Link>\n            </ListItem>\n            <ListItem>\n              <SearchIcon></SearchIcon>\n              <FilledInput placeholder=\"Search\"></FilledInput>\n            </ListItem>\n            <ListItem>\n              <Link to='/'><HomeIcon></HomeIcon></Link>\n              <Link to='/messages'><TelegramIcon></TelegramIcon></Link>\n              <Link to='/explore'><ExploreIcon></ExploreIcon></Link>\n              <Link to='notifications'><FavoriteIcon></FavoriteIcon></Link>\n              <Link to='/profile'><AccountCircleIcon></AccountCircleIcon></Link>\n            </ListItem>\n          </Toolbar>\n        </AppBar>\n        </Box>\n    );\n  }\n\n  export default NavBar;","import React, {Component} from 'react';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Box } from '@material-ui/core';\n\nclass SignUp extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        email: null,\n        fullName: null,\n        username: null,\n        password: null,\n        following: [],\n        quotes: [],\n      }\n    }\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.addUser(this.state);\n      e.target.reset();\n  }\n  \n    handleChange = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n    })\n    }\n    render() {\n    return (\n      <Container component=\"main\" maxWidth=\"sm\">\n          <Box pb={15}></Box>\n          <img margin=\"0 auto\"  src=\"./logo.png\" alt=\"logo\" />\n          <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n          Sign up to see photos and videos from your friends.\n          </Typography>\n          <form onSubmit={this.handleSubmit}>\n            <FilledInput required type=\"email\" name=\"email\" fullWidth placeholder=\"Email address\" onChange={this.handleChange}/>\n            <FilledInput required name=\"fullName\" fullWidth placeholder=\"Full name\" onChange={this.handleChange}/>\n            <FilledInput required name=\"username\" fullWidth placeholder=\"Username\" onChange={this.handleChange}/>\n            <FilledInput required type=\"password\" name=\"password\" fullWidth placeholder=\"Password\" onChange={this.handleChange}/>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n          </form>\n          <Button onClick= {() => this.props.loggingIn()} variant=\"contained\" color=\"secondary\">Have an account? Log in</Button>\n      </Container>\n      )}\n};\n\nexport default SignUp ","import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport Button from '@material-ui/core/Button';\nimport { Box } from '@material-ui/core';\n\nclass LogIn extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        email: null,\n        password: null\n      }\n    }\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.accountValidation(this.state)\n      e.target.reset();\n  }\n  \n    handleChange = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n    })\n    }\n    render() {\n    return (\n      <Container component=\"main\" maxWidth=\"sm\">\n          <Box pb={15}></Box>\n          <img margin=\"0 auto\"  src=\"./logo.png\" alt=\"logo\" />\n          <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n          Sign up to see photos and videos from your friends.\n          </Typography>\n          <form onSubmit={this.handleSubmit}>\n            <FilledInput required type=\"email\" name=\"email\" fullWidth placeholder=\"Email address\" onChange={this.handleChange}/>\n            <FilledInput required type=\"password\" name=\"password\" fullWidth placeholder=\"Password\" onChange={this.handleChange}/>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Log in</Button>\n          </form>\n          <Button onClick= {() => this.props.loggingIn()} variant=\"contained\" color=\"secondary\">Go back</Button>\n      </Container>\n      )}\n};\n\nexport default LogIn;","import React from 'react';\nimport { Container, Box, Typography } from '@material-ui/core';\n\nfunction Profile(props)  {\n        return (\n            <Container maxWidth=\"sm\" justify=\"center\" style={{ backgroundColor: '#cfe8fc', borderRadius: '10px'}}>\n                <Box pt={3}>\n                    <Typography color=\"primary\" variant=\"h6\">{`You are currently logged in as ${props.currentUser.fullName}`}</Typography>\n                </Box>\n                {props.currentUser.quotes.map(item => (\n                <Box style={{ backgroundColor: '#dfe8fc'}} p={2} m={4} border={1} borderColor=\"transparent\" borderRadius={16}>\n                    <Typography color=\"textPrimary\" variant=\"body1\">\n                        {item}\n                    </Typography>\n                </Box>\n                ))}\n                <br></br>\n            </Container>\n        )\n}\nexport default Profile;","import React from 'react';\nimport { Container, Box, Typography } from '@material-ui/core';\n\nfunction Feed(props)  {\n    const filterList = props.users.filter(user => {\n        return props.currentUser.following.includes(user.username)\n    })\n\n    const Display = () => {\n        if (filterList.length === 0) {\n            return (\n            <Container maxWidth=\"sm\" justify=\"center\" style={{ backgroundColor: '#cfe8fc', borderRadius: '10px'}}>\n                <Box pt={3}>\n                    <Typography color=\"primary\" variant=\"h5\">Updates from your followers will appear here, go and explore and get following!</Typography>\n                    <br></br>\n                </Box>\n            </Container>\n        )} else {\n            return (\n                <Container maxWidth=\"sm\" justify=\"center\" style={{ backgroundColor: '#cfe8fc', borderRadius: '10px'}}>\n                    <Box pt={3}>\n                        <Typography color=\"primary\" variant=\"h5\">Updates from your followers</Typography>\n                    </Box>\n                    {filterList.map(item => (\n                        item.quotes.map(quote => (\n                            <Box style={{ backgroundColor: '#dfe8fc'}} p={2} m={4} border={1} borderColor=\"transparent\" borderRadius={16}>\n                                <Typography color=\"textPrimary\" variant=\"body1\">{quote}</Typography>\n                                <Typography color=\"textSecondary\" variant=\"caption\">{item.fullName}</Typography>\n                            </Box>\n                            ))\n                    ))}\n                    <br></br>\n                </Container>\n            )}\n    }\n\n    return (\n        <Display  />\n    )\n}\nexport default Feed;","import React from 'react';\nimport { Container, Box, Button, Typography } from '@material-ui/core';\n\nfunction Explore(props)  {\n        function handleClick(e) {\n            const newFollow = e.target.parentElement.id;\n            props.followUser(props.currentUser.key, newFollow);\n        }\n\n        const filterList = props.users.filter(user => {\n            return !props.currentUser.following.includes(user.username);\n        })\n\n        const Display = () => {\n            if (filterList.length === 0) {\n                return <Container maxWidth=\"sm\" justify=\"center\"><Box>Nobody to explore :(</Box></Container>\n            } else {\n                return (\n                    <Container maxWidth=\"sm\" justify=\"center\" style={{ backgroundColor: '#cfe8fc', borderRadius: '10px'}}>\n                        <Box pt={3}>\n                            <Typography color=\"primary\" variant=\"h5\">You can follow these people</Typography>\n                        </Box>\n                            {filterList.map(item => (\n                            <Box p={3} m={2} border={1} borderColor=\"primary.main\" borderRadius={16}>\n                                {item.fullName}\n                                <Button id={item.username} onClick={ (e) => {handleClick(e)}}>Add</Button>\n                            </Box>\n                            ))}\n                            <br></br>\n                    </Container>\n                )}\n        }\n\n        return (\n            <Display />\n        )\n};\nexport default Explore;","import React from 'react';\nimport { Container, Box, Typography } from '@material-ui/core';\n\nfunction Messages() {\n    return (\n        <Container maxWidth=\"sm\" justify=\"center\" style={{ backgroundColor: '#cfe8fc', borderRadius: '10px'}}>\n            <Box pt={3}>\n                <Typography color=\"primary\" variant=\"h5\">Messaging feature coming soon!</Typography>\n            </Box>\n            <br></br>\n        </Container>\n    )\n}\n\nexport default Messages;","import React from 'react';\nimport { Container, Box, Typography } from '@material-ui/core';\n\nfunction Notifications() {\n    return (\n        <Container maxWidth=\"sm\" justify=\"center\" style={{ backgroundColor: '#cfe8fc', borderRadius: '10px'}}>\n            <Box pt={3}>\n                <Typography color=\"primary\" variant=\"h5\">Notifications feature coming soon!</Typography>\n            </Box>\n            <br></br>\n        </Container>\n    )\n}\n\nexport default Notifications;","import React, {Component} from 'react';\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\nimport './App.css';\nimport {db} from './firebase';\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport LogIn from './components/LogIn';\nimport Profile from './pages/Profile';\nimport Feed from './pages/Feed';\nimport Explore from './pages/Explore'\nimport Messages from './pages/Messages'\nimport Notifications from './pages/Notifications'\nimport * as firebase from 'firebase';\n\n\nfunction LogInControl(props) {\n  if (props.isLoggedIn) {\n    return (\n      <Router>\n        <NavBar />\n        <Route path='/' exact render={() => <Feed currentUser = {props.currentUser} users = {props.users} />} />\n        <Route path='/explore' render={() => <Explore users = {props.users} currentUser = {props.currentUser} followUser = {props.followUser} />} />\n        <Route path='/messages' component={Messages} />\n        <Route path='/notifications' component={Notifications} />\n        <Route path='/profile' render={() => <Profile currentUser = {props.currentUser} />} />\n      </Router>\n    );\n  } else if (props.isloggingIn) {\n    return <LogIn accountValidation = {props.accountValidation} loggingIn = {props.loggingIn} />\n  }\n    return <SignUp addUser = {props.addUser} loggingIn = {props.loggingIn} />;\n  }\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n      isLoggedIn: false,\n      isloggingIn: false,\n      currentUser: []\n    }\n  }\n\n  listener() {\n    return (\n    db.collection(\"users\")\n    .get()\n    .then(querySnapshot => {\n      const data = [];\n      querySnapshot.docs.forEach(doc => {\n        const user = doc.data()\n        user[\"key\"] = doc.id\n        data.push(user)\n      });\n      this.setState({ users: data });\n    }));\n  }\n\n  componentDidMount() {\n    this.listener()\n  }\n\n  addUser = (user) => {\n    db.collection('users').add(\n      user)\n    .then(() => this.listener())\n    .then(() => this.accountValidation(user))\n  }\n\n  followUser = (key, newFollow) => {\n    const user = db.collection('users').doc(key);\n    user.update({\n      following: firebase.firestore.FieldValue.arrayUnion(newFollow)\n    });\n    // needed to use a Promise here as currentUser state was updating using the previous state\n    this.listener().then(() => {this.accountValidation(this.state.currentUser)});\n  }\n\n  loggingIn = () => {\n    this.setState( prevState => ({\n      isloggingIn: !prevState.isloggingIn\n    }))\n  }\n\n  accountValidation = (creds) => {\n    const currentUser = this.state.users.find(user => \n      user.email === creds.email)\n    if (currentUser && currentUser.password === creds.password) {\n      return (\n        this.setState({\n          currentUser: currentUser,\n          isLoggedIn: true\n        })\n      )\n    }       \n    \n      return (\n      this.setState({\n        isloggingIn: false\n      }),\n      alert(\"Incorrect email or password, please try again\")\n    )\n\n    }\n  \n  render() {\n    return (\n      <div>\n        <LogInControl users={this.state.users} currentUser = {this.state.currentUser} followUser = {this.followUser} accountValidation = {this.accountValidation} loggingIn = {this.loggingIn} addUser = {this.addUser} isLoggedIn = {this.state.isLoggedIn} isloggingIn = {this.state.isloggingIn}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}